@page "/"
@using ScatterSeries = Blazor.ECharts.Options.Series.Scatter

<PageTitle>EChart</PageTitle>

<h1>EChart Test</h1>

<div class="chart-container">
    <EScatter Option="@option" Class="chart-fill"></EScatter>
</div>

@code {

    private EChartsOption<ScatterSeries.Scatter>? option;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(100);

        option = new()
            {
                XAxis = new() {
                new()
            },
                YAxis = new() {
                new()
            },
                Legend = new()
                {
                    Data = new[] { "범례1", "범례2" }
                },
                Series = new()
            {
                new ScatterSeries.Scatter()
                {
                    Name = "범례1",
                    Data = new[] {
                        new[]{ 2.0, 8.04, 10 },
                        new[]{ 3.0, 6.95, 20 },
                        new[]{ 23.0, 7.58, 30 },
                        new[]{ 18.0, 8.81, 15},
                        new[]{ 12.0, 8.33, 16 },
                        new[]{ 4.0, 9.96, 5 },
                        new[]{ 16.0, 7.24, 18 },
                        new[]{ 14.0, 4.26, 35 },
                        new[]{ 12.0, 10.84, 20 },
                        new[]{ 10.0, 4.82, 50 },
                        new[]{ 7.0, 5.68, 13 }
                    }
                },
                new ScatterSeries.Scatter()
                {
                    Name= "범례2",
                    Data = new[] {
                        new[]{ 1.0, 2.04 },
                        new[]{ 2.0, 15.95 },
                        new[]{ 26.0, 17.58 },
                        new[]{ 13.0, 7.81 },
                        new[]{ 22.0, 5.33 },
                        new[]{ 14.0, 9.96 },
                        new[]{ 6.0, 4.24 },
                        new[]{ 4.0, 4.26 },
                        new[]{ 22.0, 13.84 },
                        new[]{ 16.0, 14.82 },
                        new[]{ 17.0, 15.68 }
                    }
                }
            }
            };

        await base.OnInitializedAsync();
    }
}